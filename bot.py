import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime

API_TOKEN = '8484443635:AAGpJkY1qDtfDFmvsh-cbu6CIYqC8cfVTD8'
ADMIN_CHAT_ID = -1002593269045  # —Ç–≤–æ—è –∞–¥–º–∏–Ω-–≥—Ä—É–ø–ø–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞–º—è—Ç–∏ (–¥–ª—è –ø—Ä–∏–º–µ—Ä–∞, –≤ —Ä–µ–∞–ª–µ –Ω—É–∂–Ω–æ –ë–î)
user_tariffs = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–æ–≤
tariff_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
tariff_kb.add(
    KeyboardButton("1 –º–µ—Å—è—Ü ‚Äî 99‚ÇΩ"),
    KeyboardButton("3 –º–µ—Å—è—Ü–∞ ‚Äî 249‚ÇΩ"),
    KeyboardButton("5 –º–µ—Å—è—Ü–µ–≤ ‚Äî 449‚ÇΩ"),
)
tariff_kb.add(KeyboardButton("–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"))

# –ö–Ω–æ–ø–∫–∞ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
paid_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(
    KeyboardButton("–û–ø–ª–∞—Ç–∏–ª(–∞)")
)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    welcome_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π VPN –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞! üåêüîí\n\n"
        "–í—ã–±–∏—Ä–∞–π —Ç–∞—Ä–∏—Ñ, –æ–ø–ª–∞—á–∏–≤–∞–π, –∞ —è –ø–æ–º–æ–≥—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π VPN. üöÄ\n\n"
        "–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá"
    )
    await message.answer(welcome_text, reply_markup=tariff_kb)

@dp.message_handler(lambda msg: msg.text in ["1 –º–µ—Å—è—Ü ‚Äî 99‚ÇΩ", "3 –º–µ—Å—è—Ü–∞ ‚Äî 249‚ÇΩ", "5 –º–µ—Å—è—Ü–µ–≤ ‚Äî 449‚ÇΩ"])
async def choose_tariff(message: types.Message):
    tariff = message.text
    user_tariffs[message.from_user.id] = tariff

    payment_info = (
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ: {tariff}\n\n"
        "–û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:\n"
        "üì± –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (Ozon –ë–∞–Ω–∫): 89322229930\n\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–û–ø–ª–∞—Ç–∏–ª(–∞)¬ª –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
    )
    await message.answer(payment_info, reply_markup=paid_kb)

@dp.message_handler(lambda msg: msg.text == "–û–ø–ª–∞—Ç–∏–ª(–∞)")
async def paid_confirm(message: types.Message):
    user_id = message.from_user.id
    tariff = user_tariffs.get(user_id)

    if not tariff:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ.")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–≥—Ä—É–ø–ø—É
    user_name = message.from_user.username or message.from_user.full_name
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    text = f"‚ö° –ù–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂:\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name} (id: {user_id})\n–¢–∞—Ä–∏—Ñ: {tariff}\n–í—Ä–µ–º—è: {now}"
    await bot.send_message(ADMIN_CHAT_ID, text)

    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –ñ–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", reply_markup=tariff_kb)

@dp.message_handler(lambda msg: msg.text == "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
async def referral_info(message: types.Message):
    user_id = message.from_user.id
    referral_link = f"https://t.me/YourBotUsername?start={user_id}"

    text = (
        "üí° –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:\n\n"
        "–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –ø–æ —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∞–π +7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ VPN –∑–∞ –∫–∞–∂–¥–æ–≥–æ –æ–ø–ª–∞—Ç–∏–≤—à–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ!\n\n"
        f"–¢–≤–æ—è –ª–∏—á–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{referral_link}"
    )
    await message.answer(text, reply_markup=tariff_kb)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
